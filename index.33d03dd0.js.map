{"mappings":"AEAA,QAAQ,GAAG,CAAC,wBDEZ,MAAM,EAAe,CACnB,UAAW,CAAA,EACX,OAAQ,EACR,YAAa,EACb,SAAU,GACV,iBAAkB,GAClB,OAAQ,EACR,iBAAkB,CAAA,EAClB,kBAAmB,EAEnB,QAAS,CACP,QAAS,CAAA,EACT,MAAO,EACR,EAED,eAAgB,MACd,AAkUJ,WACE,IAAK,IAAM,KAAQ,EACjB,EAAK,QAAQ,CAAG,KAAK,KAAK,CAAC,AAAgB,IAAhB,KAAK,MAAM,IACtC,EAAK,UAAU,CAAG,AAAgB,EAAhB,KAAK,MAAM,GAAS,GAGxC,AAWF,SAAS,EAAc,CAAc,EACnC,IAAK,IAAM,KAAc,EAAO,WAAW,CACzC,EAAW,aAAa,GAE1B,IAAK,IAAM,KAAa,EAAO,OAAO,CACpC,EAAc,EAElB,EAlBgB,EAChB,GAxUE,CACD,EAGK,EAAa,IAAI,IAAI,GAAG,CAC9B,EAAW,KAAK,GAEhB,MAAM,EAAuB,EAAW,SAAS,CAAC,mBAElD,EAAqB,GAAG,CAAC,EAAc,aAAa,IAAI,CAAC,cAEzD,EAAqB,GAAG,CAAC,EAAc,SAAU,EAAG,GAAG,IAAI,CAAC,mBAC5D,EACG,GAAG,CAAC,EAAc,cAAe,EAAG,EAAG,KACvC,IAAI,CAAC,gBACR,EACG,GAAG,CAAC,EAAc,WAAY,EAAG,IAAO,IACxC,IAAI,CAAC,YACR,EACG,GAAG,CAAC,EAAc,mBAAoB,EAAG,EAAG,KAC5C,IAAI,CAAC,qBACR,EAAqB,GAAG,CAAC,EAAc,SAAU,EAAG,IAAK,GAAG,IAAI,CAAC,UACjE,EACG,GAAG,CAAC,EAAc,oBAClB,IAAI,CAAC,qBACR,EACG,GAAG,CAAC,EAAc,oBAAqB,EAAG,EAAG,KAC7C,IAAI,CAAC,sBACR,EACG,GAAG,CAAC,EAAc,kBAClB,IAAI,CAAC,mBAER,EACG,GAAG,CAAC,EAAa,OAAO,CAAE,WAC1B,IAAI,CAAC,mBACR,EACG,GAAG,CAAC,EAAa,OAAO,CAAE,QAAS,EAAG,EAAG,KACzC,IAAI,CAAC,iBAER,MAAM,EAAS,ICxDT,MACJ,MAA0B,AAC1B,CAAA,GAA8B,AAE9B,KAAI,OAAJ,CACE,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,AAC1B,CAEA,IAAI,QAAJ,CACE,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,AAC3B,CAEQ,cAAA,CACN,IAAI,CAAC,MAAM,CAAC,KAAK,CAAG,OAAO,UAAU,CACrC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAG,OAAO,WAAW,AACzC,CAEA,YAAY,CAAU,CAAtB,CACE,IAAI,CAAC,MAAM,CAAG,SAAS,cAAc,CAAC,GACtC,IAAI,CAAC,GAAG,CAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,MAClC,IAAI,CAAC,YAAY,GACjB,OAAO,gBAAgB,CAAC,SAAU,IAAI,CAAC,YAAY,CACrD,CAEA,MAAM,EAAkB,CAAC,CAAzB,CACE,IAAI,CAAC,GAAG,CAAC,SAAS,CAAG,CAAA,cAAA,EAAiB,EAAO,CAAA,CAAG,CAChD,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAG,EAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAC/D,CAEA,IAAI,CAAS,CAAE,CAAS,CAAE,CAAa,CAAE,CAAc,CAAE,CAAa,CAAtE,CACE,IAAI,CAAC,GAAG,CAAC,SAAS,CAAG,EACrB,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,EAAG,EAAG,EAAO,EACnC,CAEA,OAAO,CAAS,CAAE,CAAS,CAAE,CAAc,CAAE,CAAa,CAA1D,CACE,IAAI,CAAC,GAAG,CAAC,SAAS,CAAG,EACrB,IAAI,CAAC,GAAG,CAAC,SAAS,GAClB,IAAI,CAAC,GAAG,CAAC,OAAO,CACd,EAAI,EAAS,EACb,EAAI,EAAS,EACb,EACA,EACA,EACA,EACA,EAAI,KAAK,EAAE,EAEb,IAAI,CAAC,GAAG,CAAC,IAAI,EACf,CAEA,iBACE,CAAgB,CAChB,CAKC,CAPH,CASE,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,EAAU,EACzC,CACD,EDJiC,UAQ5B,EAAS,CAAC,UAAW,UAAW,UAAmB,CAEnD,EAAa,CACjB,WAAY,CAAA,cAAA,EAAiB,EAAa,iBAAiB,CAAA,CAAA,CAAG,CAE9D,OAAQ,CACN,CAAC,CAAM,CAAC,EAAE,CAAC,CAAE,UACb,CAAC,CAAM,CAAC,EAAE,CAAC,CAAE,UACb,CAAC,CAAM,CAAC,EAAE,CAAC,CAAE,SACd,CACO,EAoBJ,EAAgB,EAAE,CACxB,IAAK,MAAM,KAAO,EAAQ,CACxB,IAAK,IAAM,KAAM,EACf,EAAM,IAAI,CAAC,CACT,IAAA,EACA,GAAA,EACA,SAAU,IACV,WAAY,CACb,GAEH,EAAM,IAAI,CAAC,CACT,IAAA,EACA,GAAI,QACJ,SAAU,IACV,WAAY,CACb,GACD,EAAM,IAAI,CAAC,CACT,IAAA,EACA,GAAI,UACJ,SAAU,OAAO,SAAS,CAC1B,WAAY,IAAM,EAAa,OAAO,CAAC,KAAK,AAC7C,EACH,CAEA,MAAM,EAAc,EAAW,SAAS,CAAC,SAGzC,IAAK,MAAM,KAFX,EAAY,KAAK,GAEG,GAAQ,CAC1B,IAAM,EAAa,EAAM,MAAM,CAAC,AAAC,GAAM,EAAE,GAAG,GAAK,GAAS,AAAS,YAAT,EAAE,EAAE,EACxD,EAAc,EAAY,SAAS,CAAC,GAI1C,IAAK,IAAM,KAFX,EAAY,QAAQ,CAAC,EAAW,MAAM,CAAE,GAAO,IAAI,CAAC,SAEjC,GAAY,CAC7B,IAAM,EAAa,EAAY,SAAS,CAAC,EAAK,EAAE,EAChD,EAAW,GAAG,CAAC,EAAM,WAAY,EAAG,KAAO,IAAI,CAAC,YAChD,EAAW,GAAG,CAAC,EAAM,aAAc,GAAI,EAAG,KAAM,IAAI,CAAC,cACrD,EAAW,KAAK,EAClB,CACA,EAAY,KAAK,EACnB,CAEA,MAAM,EAAgB,CACpB,EAAG,EACH,EAAG,CACJ,EAcK,EAAwB,EAAO,OAAO,CAAC,AAAC,GAXrC,MAAM,IAAI,CAAC,CAChB,OAUgE,GATjE,GAAE,GAAG,CAAC,IAAO,CAAA,CACZ,EAAG,KAAK,MAAM,GAAK,EAAO,KAAK,CAC/B,EAAG,KAAK,MAAM,GAAK,EAAO,MAAM,CAChC,MAM6D,EAL7D,GAAK,AAAA,CAAA,KAAK,MAAM,GAAK,CAAA,EAAK,IAC1B,GAAK,AAAA,CAAA,KAAK,MAAM,GAAK,CAAA,EAAK,GAC3B,CAAA,IAwDH,SAAS,EAAgB,CAAY,CAAE,CAAY,EACjD,IAAM,EAAO,EAAM,IAAI,CAAC,AAAC,GAChB,EAAE,GAAG,GAAK,EAAG,KAAK,EAAI,EAAE,EAAE,GAAK,EAAG,KAAK,EAGhD,GAAI,CAAC,EACH,OAGF,IAAI,EAAK,EACL,EAAK,EAEH,CAAC,EAAU,EAAI,EAAG,CAAG,AAzC7B,SAAwB,CAAY,CAAE,CAAY,EAChD,IAAM,EAAK,EAAG,CAAC,CAAG,EAAG,CAAC,CAChB,EAAK,EAAG,CAAC,CAAG,EAAG,CAAC,CAEtB,MAAO,CADU,KAAK,IAAI,CAAC,EAAK,EAAK,EAAK,GACxB,EAAI,EAAG,AAC3B,EAoC4C,EAAI,GAE9C,GAAI,EAAW,AAAsB,EAAtB,EAAa,MAAM,EAAQ,EAAW,EAAK,QAAQ,CAAE,CAClE,IAAI,EAAI,EAOR,EAAK,AADL,CAAA,GALI,AAA2B,YAA3B,OAAO,EAAK,UAAU,CACpB,EAAK,UAAU,GAEf,EAAK,UAAU,EAEhB,CAAL,EACS,EACT,EAAK,EAAI,CACX,MAAO,GAAI,EAAW,AAAsB,EAAtB,EAAa,MAAM,CAAM,CAC7C,IAAM,EACJ,IACA,EAAa,gBAAgB,CAC5B,CAAA,EAAK,CAAA,EAAY,CAAA,AAAsB,EAAtB,EAAa,MAAM,AAAG,CAAA,CAAC,EAC3C,EAAK,GAAK,EAAI,EACd,EAAK,GAAK,EAAI,EAEd,EAAG,EAAE,CACH,GACC,CAAA,EAAG,EAAE,CAAG,CAAA,EACR,CAAA,EAAI,EAAa,QAAQ,CAAG,GAAA,EAC5B,CAAA,AAAgB,GAAhB,KAAK,MAAM,GAAW,EAAA,EACzB,EAAG,EAAE,CACH,GACC,CAAA,EAAG,EAAE,CAAG,CAAA,EACR,CAAA,EAAI,EAAa,QAAQ,CAAG,GAAA,EAC5B,CAAA,AAAgB,GAAhB,KAAK,MAAM,GAAW,EAAA,CAC3B,CACA,EAAG,EAAE,CAAI,AAAA,CAAA,EAAG,EAAE,CAAG,CAAA,EAAO,CAAA,EAAI,EAAa,QAAQ,CAAG,GAAA,EACpD,EAAG,EAAE,CAAI,AAAA,CAAA,EAAG,EAAE,CAAG,CAAA,EAAO,CAAA,EAAI,EAAa,QAAQ,CAAG,GAAA,EACpD,EAAG,CAAC,EAAI,EAAG,EAAE,CACb,EAAG,CAAC,EAAI,EAAG,EAAE,CAEb,AAnGF,SAAsB,CAAkB,EACtC,IAAM,EAAgB,EAAO,MAAM,CAAG,EAAM,CAAA,EAAa,MAAM,CAAG,GAAA,EAC5D,EAAe,EAAO,KAAK,CAAG,EAAM,CAAA,EAAa,MAAM,CAAG,GAAA,CAE5D,CAAA,EAAS,CAAC,CAAG,EAAO,MAAM,CAAG,IAC/B,EAAS,EAAE,EAAI,GAAK,EAAa,WAAW,CAC5C,EAAS,CAAC,CAAG,EAAO,MAAM,CAAG,GAE3B,EAAS,CAAC,CAAG,IACf,EAAS,EAAE,EAAI,GAAK,EAAa,WAAW,CAC5C,EAAS,CAAC,CAAG,GAEX,EAAS,CAAC,CAAG,EAAO,KAAK,CAAG,IAC9B,EAAS,EAAE,EAAI,GAAK,EAAa,WAAW,CAC5C,EAAS,CAAC,CAAG,EAAO,KAAK,CAAG,GAE1B,EAAS,CAAC,CAAG,EAAI,IACnB,EAAS,EAAE,EAAI,GAAK,EAAa,WAAW,CAC5C,EAAS,CAAC,CAAG,EAEjB,EA+Ee,EAEf,EA+DA,AAlBA,SAAS,IAKP,IAAK,IAAM,KAJP,EAAa,SAAS,EACxB,AA7CJ,WACE,IAAK,IAAM,KAAa,EAAW,CACjC,IAAK,IAAM,KAAa,EAClB,IAAc,GAGlB,EAAgB,EAAW,EAEzB,CAAA,EAAa,OAAO,CAAC,OAAO,EAC9B,EAAgB,EAAW,CACzB,EAAG,EAAU,CAAC,CAAG,AAAgB,GAAhB,KAAK,MAAM,GAAW,IACvC,EAAG,EAAO,MAAM,CAChB,MAAO,UACP,GAAI,EACJ,GAAI,EAAa,OAAO,CAAC,KAAK,AAC/B,GAEC,EAAa,gBAAgB,EAC/B,EAAgB,EAAW,CACzB,EAAG,EAAc,CAAC,CAClB,EAAG,EAAc,CAAC,CAClB,MAAO,QACP,GAAI,EACJ,GAAI,CACL,EAEL,CACF,IAoBE,EAAO,KAAK,CAAC,EAAa,iBAAiB,EACpB,GACE,UAAnB,EAAS,KAAK,EAAgB,AAAmB,YAAnB,EAAS,KAAK,EAC9C,EAAO,MAAM,CACX,EAAS,CAAC,CACV,EAAS,CAAC,CACV,EAAa,MAAM,CACnB,EAAW,MAAM,CAAC,EAAS,KAAK,CAAC,EAIvC,AA7BF,CAAA,WAEE,IAAM,EAAgB,EAAO,MAAM,CAAG,EAAM,CAAA,EAAa,MAAM,CAAG,GAAA,EAC5D,EAAe,EAAO,KAAK,CAAG,EAAM,CAAA,EAAa,MAAM,CAAG,GAAA,EAEhE,EAAO,GAAG,CACR,EAAc,EAAa,MAAM,CACjC,EAAe,EAAa,MAAM,CAClC,EAAO,KAAK,CAAG,AAAc,EAAd,EAAkB,AAAsB,EAAtB,EAAa,MAAM,CACpD,EAAO,MAAM,CAAG,AAAe,EAAf,EAAmB,AAAsB,EAAtB,EAAa,MAAM,CACtD,QAEJ,CAAA,IAkBE,OAAO,qBAAqB,CAAC,EAC/B,IAOA,EAAO,gBAAgB,CAAC,YAAa,AAAC,IACpC,EAAc,CAAC,CAAG,EAAM,OAAO,CAC/B,EAAc,CAAC,CAAG,EAAM,OAAO,AACjC,GAEA,EAAO,gBAAgB,CAAC,YAAa,AAAC,IACpC,EAAa,gBAAgB,CAAG,CAAA,CAClC,GAEA,EAAO,gBAAgB,CAAC,UAAW,AAAC,IAClC,EAAa,gBAAgB,CAAG,CAAA,CAClC","sources":["<anon>","src/index.ts","src/shared.ts"],"sourcesContent":["console.log(\"Hello from shared.ts\");\nclass $96b138133bee9afa$export$eb8e52f9a29ae213 {\n    canvas;\n    ctx;\n    get width() {\n        return this.canvas.width;\n    }\n    get height() {\n        return this.canvas.height;\n    }\n    resizeCanvas() {\n        this.canvas.width = window.innerWidth;\n        this.canvas.height = window.innerHeight;\n    }\n    constructor(id){\n        this.canvas = document.getElementById(id);\n        this.ctx = this.canvas.getContext(\"2d\");\n        this.resizeCanvas();\n        window.addEventListener(\"resize\", this.resizeCanvas);\n    }\n    clear(opacity = 1) {\n        this.ctx.fillStyle = `rgba(0, 0, 0, ${opacity})`;\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n    box(x, y, width, height, color) {\n        this.ctx.fillStyle = color;\n        this.ctx.strokeRect(x, y, width, height);\n    }\n    circle(x, y, radius, color) {\n        this.ctx.fillStyle = color;\n        this.ctx.beginPath();\n        this.ctx.ellipse(x - radius / 2, y - radius / 2, radius, radius, 0, 0, 2 * Math.PI);\n        this.ctx.fill();\n    }\n    addEventListener(evenName, listener) {\n        this.canvas.addEventListener(evenName, listener);\n    }\n}\n\n\nconst $f27a99974ce68c5f$var$globalParams = {\n    isRunning: false,\n    radius: 2,\n    edgeDumping: 0,\n    friction: 50,\n    nucleusRepulsion: 0.5,\n    margin: 0,\n    mouseInteraction: false,\n    backgroundOpacity: 1,\n    gravity: {\n        enabled: false,\n        force: 0.1\n    },\n    randomizeRules: ()=>{\n        $f27a99974ce68c5f$var$randomizeRules();\n    }\n};\n// @ts-expect-error\nconst $f27a99974ce68c5f$var$controlGui = new lil.GUI();\n$f27a99974ce68c5f$var$controlGui.close();\nconst $f27a99974ce68c5f$var$globalSettingsFolder = $f27a99974ce68c5f$var$controlGui.addFolder(\"Global settings\");\n$f27a99974ce68c5f$var$globalSettingsFolder.add($f27a99974ce68c5f$var$globalParams, \"isRunning\").name(\"Is running\");\n$f27a99974ce68c5f$var$globalSettingsFolder.add($f27a99974ce68c5f$var$globalParams, \"radius\", 1, 5).name(\"Particle radius\");\n$f27a99974ce68c5f$var$globalSettingsFolder.add($f27a99974ce68c5f$var$globalParams, \"edgeDumping\", 0, 1, 0.01).name(\"Edge dumping\");\n$f27a99974ce68c5f$var$globalSettingsFolder.add($f27a99974ce68c5f$var$globalParams, \"friction\", 0, 1000, 0.1).name(\"Friction\");\n$f27a99974ce68c5f$var$globalSettingsFolder.add($f27a99974ce68c5f$var$globalParams, \"nucleusRepulsion\", 0, 1, 0.01).name(\"Nucleus repulsion\");\n$f27a99974ce68c5f$var$globalSettingsFolder.add($f27a99974ce68c5f$var$globalParams, \"margin\", 0, 100, 1).name(\"Margin\");\n$f27a99974ce68c5f$var$globalSettingsFolder.add($f27a99974ce68c5f$var$globalParams, \"mouseInteraction\").name(\"Mouse interaction\");\n$f27a99974ce68c5f$var$globalSettingsFolder.add($f27a99974ce68c5f$var$globalParams, \"backgroundOpacity\", 0, 1, 0.01).name(\"Background opacity\");\n$f27a99974ce68c5f$var$globalSettingsFolder.add($f27a99974ce68c5f$var$globalParams, \"randomizeRules\").name(\"Randomize rules\");\n$f27a99974ce68c5f$var$globalSettingsFolder.add($f27a99974ce68c5f$var$globalParams.gravity, \"enabled\").name(\"Gravity enabled\");\n$f27a99974ce68c5f$var$globalSettingsFolder.add($f27a99974ce68c5f$var$globalParams.gravity, \"force\", 0, 1, 0.01).name(\"Gravity force\");\nconst $f27a99974ce68c5f$var$canvas = new (0, $96b138133bee9afa$export$eb8e52f9a29ae213)(\"canvas\");\n// const canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\n// const ctx = canvas.getContext(\"2d\")!;\n// resizeCanvas();\n// window.addEventListener(\"resize\", resizeCanvas);\nconst $f27a99974ce68c5f$var$GROUPS = [\n    \"Group 1\",\n    \"Group 2\",\n    \"Group 3\"\n];\nconst $f27a99974ce68c5f$var$colorTheme = {\n    background: `rgba(0, 0, 0, ${$f27a99974ce68c5f$var$globalParams.backgroundOpacity})`,\n    // groups: [\"#FF18C8\", \"#1BEAFF\", \"#7BFF00\"],\n    groups: {\n        [$f27a99974ce68c5f$var$GROUPS[0]]: \"#FF18C8\",\n        [$f27a99974ce68c5f$var$GROUPS[1]]: \"#1BEAFF\",\n        [$f27a99974ce68c5f$var$GROUPS[2]]: \"#7BFF00\"\n    }\n};\nconst $f27a99974ce68c5f$var$rules = [];\nfor (const who of $f27a99974ce68c5f$var$GROUPS){\n    for (const to of $f27a99974ce68c5f$var$GROUPS)$f27a99974ce68c5f$var$rules.push({\n        who: who,\n        to: to,\n        distance: 100,\n        attraction: 0\n    });\n    $f27a99974ce68c5f$var$rules.push({\n        who: who,\n        to: \"mouse\",\n        distance: 100,\n        attraction: 0\n    });\n    $f27a99974ce68c5f$var$rules.push({\n        who: who,\n        to: \"gravity\",\n        distance: Number.MAX_VALUE,\n        attraction: ()=>$f27a99974ce68c5f$var$globalParams.gravity.force\n    });\n}\nconst $f27a99974ce68c5f$var$rulesFolder = $f27a99974ce68c5f$var$controlGui.addFolder(\"Rules\");\n$f27a99974ce68c5f$var$rulesFolder.close();\nfor (const group of $f27a99974ce68c5f$var$GROUPS){\n    const groupRules = $f27a99974ce68c5f$var$rules.filter((r)=>r.who === group && r.to !== \"gravity\");\n    const groupFolder = $f27a99974ce68c5f$var$rulesFolder.addFolder(group);\n    groupFolder.addColor($f27a99974ce68c5f$var$colorTheme.groups, group).name(\"Color\");\n    for (const rule of groupRules){\n        const ruleFolder = groupFolder.addFolder(rule.to);\n        ruleFolder.add(rule, \"distance\", 0, 1000).name(\"Distance\");\n        ruleFolder.add(rule, \"attraction\", -1, 1, 0.01).name(\"Attraction\");\n        ruleFolder.close();\n    }\n    groupFolder.close();\n}\nconst $f27a99974ce68c5f$var$mousePosition = {\n    x: 0,\n    y: 0\n};\nfunction $f27a99974ce68c5f$var$addParticles(group, count) {\n    return Array.from({\n        length: count\n    }).map(()=>({\n            x: Math.random() * $f27a99974ce68c5f$var$canvas.width,\n            y: Math.random() * $f27a99974ce68c5f$var$canvas.height,\n            group: group,\n            vx: (Math.random() - 1) / 1000,\n            vy: (Math.random() - 1) / 1000\n        }));\n}\nconst $f27a99974ce68c5f$var$particles = $f27a99974ce68c5f$var$GROUPS.flatMap((c)=>$f27a99974ce68c5f$var$addParticles(c, 300));\nfunction $f27a99974ce68c5f$var$bounceLimits(particle) {\n    const heightMargin = $f27a99974ce68c5f$var$canvas.height / 2 * ($f27a99974ce68c5f$var$globalParams.margin / 100);\n    const widthMargin = $f27a99974ce68c5f$var$canvas.width / 2 * ($f27a99974ce68c5f$var$globalParams.margin / 100);\n    if (particle.y > $f27a99974ce68c5f$var$canvas.height - heightMargin) {\n        particle.vy *= -1 + $f27a99974ce68c5f$var$globalParams.edgeDumping;\n        particle.y = $f27a99974ce68c5f$var$canvas.height - heightMargin;\n    }\n    if (particle.y < heightMargin) {\n        particle.vy *= -1 + $f27a99974ce68c5f$var$globalParams.edgeDumping;\n        particle.y = heightMargin;\n    }\n    if (particle.x > $f27a99974ce68c5f$var$canvas.width - widthMargin) {\n        particle.vx *= -1 + $f27a99974ce68c5f$var$globalParams.edgeDumping;\n        particle.x = $f27a99974ce68c5f$var$canvas.width - widthMargin;\n    }\n    if (particle.x < 0 + widthMargin) {\n        particle.vx *= -1 + $f27a99974ce68c5f$var$globalParams.edgeDumping;\n        particle.x = widthMargin;\n    }\n}\nfunction $f27a99974ce68c5f$var$bounceDistance(p1, p2) {\n    const dx = p2.x - p1.x;\n    const dy = p2.y - p1.y;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    return [\n        distance,\n        dx,\n        dy\n    ];\n}\nfunction $f27a99974ce68c5f$var$infinityDistance(p1, p2) {\n    const dx = p2.x - p1.x;\n    const dy = p2.y - p1.y;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    return [\n        distance,\n        dx,\n        dy\n    ];\n}\nfunction $f27a99974ce68c5f$var$inifintyLoop(particle) {\n    if (particle.y > $f27a99974ce68c5f$var$canvas.height) particle.y = 0;\n    if (particle.y < 0) particle.y = $f27a99974ce68c5f$var$canvas.height;\n    if (particle.x > $f27a99974ce68c5f$var$canvas.width) particle.x = 0;\n    if (particle.x < 0) particle.x = $f27a99974ce68c5f$var$canvas.width;\n}\nfunction $f27a99974ce68c5f$var$applyAttraction(p1, p2) {\n    const rule = $f27a99974ce68c5f$var$rules.find((r)=>{\n        return r.who === p1.group && r.to === p2.group;\n    });\n    if (!rule) return;\n    let fx = 0;\n    let fy = 0;\n    const [distance, dx, dy] = $f27a99974ce68c5f$var$bounceDistance(p1, p2);\n    if (distance > $f27a99974ce68c5f$var$globalParams.radius * 2 && distance < rule.distance) {\n        let F = 0;\n        if (typeof rule.attraction === \"function\") F = rule.attraction();\n        else F = rule.attraction;\n        F /= distance;\n        fx = F * dx;\n        fy = F * dy;\n    } else if (distance < $f27a99974ce68c5f$var$globalParams.radius * 2) {\n        const F = 0.01 * $f27a99974ce68c5f$var$globalParams.nucleusRepulsion * (1 / (distance / ($f27a99974ce68c5f$var$globalParams.radius * 2)));\n        fx = -1 * F * dx;\n        fy = -1 * F * dy;\n        p2.vx = -1 * (p2.vx + fx) * (1 - $f27a99974ce68c5f$var$globalParams.friction / 2000) * (Math.random() * 0.9 + 0.2);\n        p2.vy = -1 * (p2.vy + fy) * (1 - $f27a99974ce68c5f$var$globalParams.friction / 2000) * (Math.random() * 0.9 + 0.2);\n    }\n    p1.vx = (p1.vx + fx) * (1 - $f27a99974ce68c5f$var$globalParams.friction / 2000);\n    p1.vy = (p1.vy + fy) * (1 - $f27a99974ce68c5f$var$globalParams.friction / 2000);\n    p1.x += p1.vx;\n    p1.y += p1.vy;\n    $f27a99974ce68c5f$var$bounceLimits(p1);\n// inifintyLoop(p1);\n}\nfunction $f27a99974ce68c5f$var$applyRules() {\n    for (const particle1 of $f27a99974ce68c5f$var$particles){\n        for (const particle2 of $f27a99974ce68c5f$var$particles){\n            if (particle1 === particle2) continue;\n            $f27a99974ce68c5f$var$applyAttraction(particle1, particle2);\n        }\n        if ($f27a99974ce68c5f$var$globalParams.gravity.enabled) $f27a99974ce68c5f$var$applyAttraction(particle1, {\n            x: particle1.x + Math.random() * 0.5 - 0.25,\n            y: $f27a99974ce68c5f$var$canvas.height,\n            group: \"gravity\",\n            vx: 0,\n            vy: $f27a99974ce68c5f$var$globalParams.gravity.force\n        });\n        if ($f27a99974ce68c5f$var$globalParams.mouseInteraction) $f27a99974ce68c5f$var$applyAttraction(particle1, {\n            x: $f27a99974ce68c5f$var$mousePosition.x,\n            y: $f27a99974ce68c5f$var$mousePosition.y,\n            group: \"mouse\",\n            vx: 0,\n            vy: 0\n        });\n    }\n}\nfunction $f27a99974ce68c5f$var$drawBoundingBox() {\n    // ctx.strokeStyle = \"white\";\n    const heightMargin = $f27a99974ce68c5f$var$canvas.height / 2 * ($f27a99974ce68c5f$var$globalParams.margin / 100);\n    const widthMargin = $f27a99974ce68c5f$var$canvas.width / 2 * ($f27a99974ce68c5f$var$globalParams.margin / 100);\n    $f27a99974ce68c5f$var$canvas.box(widthMargin - $f27a99974ce68c5f$var$globalParams.radius, heightMargin - $f27a99974ce68c5f$var$globalParams.radius, $f27a99974ce68c5f$var$canvas.width - widthMargin * 2 + $f27a99974ce68c5f$var$globalParams.radius * 2, $f27a99974ce68c5f$var$canvas.height - heightMargin * 2 + $f27a99974ce68c5f$var$globalParams.radius * 2, \"white\");\n}\nfunction $f27a99974ce68c5f$var$render() {\n    if ($f27a99974ce68c5f$var$globalParams.isRunning) $f27a99974ce68c5f$var$applyRules();\n    $f27a99974ce68c5f$var$canvas.clear($f27a99974ce68c5f$var$globalParams.backgroundOpacity);\n    for (const particle of $f27a99974ce68c5f$var$particles)if (particle.group !== \"mouse\" && particle.group !== \"gravity\") $f27a99974ce68c5f$var$canvas.circle(particle.x, particle.y, $f27a99974ce68c5f$var$globalParams.radius, $f27a99974ce68c5f$var$colorTheme.groups[particle.group]);\n    $f27a99974ce68c5f$var$drawBoundingBox();\n    window.requestAnimationFrame($f27a99974ce68c5f$var$render);\n}\n$f27a99974ce68c5f$var$render();\nfunction $f27a99974ce68c5f$var$randomColorChannelValue() {\n    return Math.round(Math.random() * 255);\n}\n$f27a99974ce68c5f$var$canvas.addEventListener(\"mousemove\", (event)=>{\n    $f27a99974ce68c5f$var$mousePosition.x = event.clientX;\n    $f27a99974ce68c5f$var$mousePosition.y = event.clientY;\n});\n$f27a99974ce68c5f$var$canvas.addEventListener(\"mousedown\", (event)=>{\n    $f27a99974ce68c5f$var$globalParams.mouseInteraction = true;\n});\n$f27a99974ce68c5f$var$canvas.addEventListener(\"mouseup\", (event)=>{\n    $f27a99974ce68c5f$var$globalParams.mouseInteraction = false;\n});\nfunction $f27a99974ce68c5f$var$randomizeRules() {\n    for (const rule of $f27a99974ce68c5f$var$rules){\n        rule.distance = Math.round(Math.random() * 1000);\n        rule.attraction = Math.random() * 2 - 1;\n    }\n    $f27a99974ce68c5f$var$updateDisplay($f27a99974ce68c5f$var$rulesFolder);\n}\nfunction $f27a99974ce68c5f$var$updateDisplay(folder) {\n    for (const controller of folder.controllers)controller.updateDisplay();\n    for (const subFolder of folder.folders)$f27a99974ce68c5f$var$updateDisplay(subFolder);\n}\n\n\n//# sourceMappingURL=index.33d03dd0.js.map\n","import { ParticleCanvas } from \"./shared\";\n\nconst globalParams = {\n  isRunning: false,\n  radius: 2,\n  edgeDumping: 0,\n  friction: 50,\n  nucleusRepulsion: 0.5,\n  margin: 0,\n  mouseInteraction: false,\n  backgroundOpacity: 1,\n\n  gravity: {\n    enabled: false,\n    force: 0.1,\n  },\n\n  randomizeRules: () => {\n    randomizeRules();\n  },\n};\n\n// @ts-expect-error\nconst controlGui = new lil.GUI();\ncontrolGui.close();\n\nconst globalSettingsFolder = controlGui.addFolder(\"Global settings\");\n\nglobalSettingsFolder.add(globalParams, \"isRunning\").name(\"Is running\");\n\nglobalSettingsFolder.add(globalParams, \"radius\", 1, 5).name(\"Particle radius\");\nglobalSettingsFolder\n  .add(globalParams, \"edgeDumping\", 0, 1, 0.01)\n  .name(\"Edge dumping\");\nglobalSettingsFolder\n  .add(globalParams, \"friction\", 0, 1_000, 0.1)\n  .name(\"Friction\");\nglobalSettingsFolder\n  .add(globalParams, \"nucleusRepulsion\", 0, 1, 0.01)\n  .name(\"Nucleus repulsion\");\nglobalSettingsFolder.add(globalParams, \"margin\", 0, 100, 1).name(\"Margin\");\nglobalSettingsFolder\n  .add(globalParams, \"mouseInteraction\")\n  .name(\"Mouse interaction\");\nglobalSettingsFolder\n  .add(globalParams, \"backgroundOpacity\", 0, 1, 0.01)\n  .name(\"Background opacity\");\nglobalSettingsFolder\n  .add(globalParams, \"randomizeRules\")\n  .name(\"Randomize rules\");\n\nglobalSettingsFolder\n  .add(globalParams.gravity, \"enabled\")\n  .name(\"Gravity enabled\");\nglobalSettingsFolder\n  .add(globalParams.gravity, \"force\", 0, 1, 0.01)\n  .name(\"Gravity force\");\n\nconst canvas = new ParticleCanvas(\"canvas\");\n\n// const canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\n// const ctx = canvas.getContext(\"2d\")!;\n\n// resizeCanvas();\n// window.addEventListener(\"resize\", resizeCanvas);\n\nconst GROUPS = [\"Group 1\", \"Group 2\", \"Group 3\"] as const;\n\nconst colorTheme = {\n  background: `rgba(0, 0, 0, ${globalParams.backgroundOpacity})`,\n  // groups: [\"#FF18C8\", \"#1BEAFF\", \"#7BFF00\"],\n  groups: {\n    [GROUPS[0]]: \"#FF18C8\",\n    [GROUPS[1]]: \"#1BEAFF\",\n    [GROUPS[2]]: \"#7BFF00\",\n  },\n} as const;\n\ntype ParticleGroup = (typeof GROUPS)[number];\ntype Group = ParticleGroup | \"mouse\" | \"gravity\";\n\ntype Rule = {\n  who: Group;\n  to: Group;\n  distance: number;\n  attraction: number | (() => number);\n};\n\ntype Particle = {\n  x: number;\n  y: number;\n  group: Group;\n  vx: number;\n  vy: number;\n};\n\nconst rules: Rule[] = [];\nfor (const who of GROUPS) {\n  for (const to of GROUPS) {\n    rules.push({\n      who,\n      to,\n      distance: 100,\n      attraction: 0,\n    });\n  }\n  rules.push({\n    who,\n    to: \"mouse\",\n    distance: 100,\n    attraction: 0,\n  });\n  rules.push({\n    who,\n    to: \"gravity\",\n    distance: Number.MAX_VALUE,\n    attraction: () => globalParams.gravity.force,\n  });\n}\n\nconst rulesFolder = controlGui.addFolder(\"Rules\");\nrulesFolder.close();\n\nfor (const group of GROUPS) {\n  const groupRules = rules.filter((r) => r.who === group && r.to !== \"gravity\");\n  const groupFolder = rulesFolder.addFolder(group);\n\n  groupFolder.addColor(colorTheme.groups, group).name(\"Color\");\n\n  for (const rule of groupRules) {\n    const ruleFolder = groupFolder.addFolder(rule.to);\n    ruleFolder.add(rule, \"distance\", 0, 1_000).name(\"Distance\");\n    ruleFolder.add(rule, \"attraction\", -1, 1, 0.01).name(\"Attraction\");\n    ruleFolder.close();\n  }\n  groupFolder.close();\n}\n\nconst mousePosition = {\n  x: 0,\n  y: 0,\n};\n\nfunction addParticles(group: ParticleGroup, count: number): Particle[] {\n  return Array.from({\n    length: count,\n  }).map(() => ({\n    x: Math.random() * canvas.width,\n    y: Math.random() * canvas.height,\n    group,\n    vx: (Math.random() - 1) / 1000,\n    vy: (Math.random() - 1) / 1000,\n  }));\n}\n\nconst particles: Particle[] = GROUPS.flatMap((c) => addParticles(c, 300));\n\nfunction bounceLimits(particle: Particle) {\n  const heightMargin = (canvas.height / 2) * (globalParams.margin / 100);\n  const widthMargin = (canvas.width / 2) * (globalParams.margin / 100);\n\n  if (particle.y > canvas.height - heightMargin) {\n    particle.vy *= -1 + globalParams.edgeDumping;\n    particle.y = canvas.height - heightMargin;\n  }\n  if (particle.y < heightMargin) {\n    particle.vy *= -1 + globalParams.edgeDumping;\n    particle.y = heightMargin;\n  }\n  if (particle.x > canvas.width - widthMargin) {\n    particle.vx *= -1 + globalParams.edgeDumping;\n    particle.x = canvas.width - widthMargin;\n  }\n  if (particle.x < 0 + widthMargin) {\n    particle.vx *= -1 + globalParams.edgeDumping;\n    particle.x = widthMargin;\n  }\n}\n\nfunction bounceDistance(p1: Particle, p2: Particle) {\n  const dx = p2.x - p1.x;\n  const dy = p2.y - p1.y;\n  const distance = Math.sqrt(dx * dx + dy * dy);\n  return [distance, dx, dy];\n}\n\nfunction infinityDistance(p1: Particle, p2: Particle) {\n  const dx = p2.x - p1.x;\n  const dy = p2.y - p1.y;\n  const distance = Math.sqrt(dx * dx + dy * dy);\n  return [distance, dx, dy];\n}\n\nfunction inifintyLoop(particle: Particle) {\n  if (particle.y > canvas.height) {\n    particle.y = 0;\n  }\n  if (particle.y < 0) {\n    particle.y = canvas.height;\n  }\n  if (particle.x > canvas.width) {\n    particle.x = 0;\n  }\n  if (particle.x < 0) {\n    particle.x = canvas.width;\n  }\n}\n\nfunction applyAttraction(p1: Particle, p2: Particle) {\n  const rule = rules.find((r) => {\n    return r.who === p1.group && r.to === p2.group;\n  });\n\n  if (!rule) {\n    return;\n  }\n\n  let fx = 0;\n  let fy = 0;\n\n  const [distance, dx, dy] = bounceDistance(p1, p2);\n\n  if (distance > globalParams.radius * 2 && distance < rule.distance) {\n    let F = 0;\n    if (typeof rule.attraction === \"function\") {\n      F = rule.attraction();\n    } else {\n      F = rule.attraction;\n    }\n    F /= distance;\n    fx = F * dx;\n    fy = F * dy;\n  } else if (distance < globalParams.radius * 2) {\n    const F =\n      0.01 *\n      globalParams.nucleusRepulsion *\n      (1 / (distance / (globalParams.radius * 2)));\n    fx = -1 * F * dx;\n    fy = -1 * F * dy;\n\n    p2.vx =\n      -1 *\n      (p2.vx + fx) *\n      (1 - globalParams.friction / 2_000) *\n      (Math.random() * 0.9 + 0.2);\n    p2.vy =\n      -1 *\n      (p2.vy + fy) *\n      (1 - globalParams.friction / 2_000) *\n      (Math.random() * 0.9 + 0.2);\n  }\n  p1.vx = (p1.vx + fx) * (1 - globalParams.friction / 2_000);\n  p1.vy = (p1.vy + fy) * (1 - globalParams.friction / 2_000);\n  p1.x += p1.vx;\n  p1.y += p1.vy;\n\n  bounceLimits(p1);\n  // inifintyLoop(p1);\n}\n\nfunction applyRules() {\n  for (const particle1 of particles) {\n    for (const particle2 of particles) {\n      if (particle1 === particle2) {\n        continue;\n      }\n      applyAttraction(particle1, particle2);\n    }\n    if (globalParams.gravity.enabled) {\n      applyAttraction(particle1, {\n        x: particle1.x + Math.random() * 0.5 - 0.25,\n        y: canvas.height,\n        group: \"gravity\",\n        vx: 0,\n        vy: globalParams.gravity.force,\n      });\n    }\n    if (globalParams.mouseInteraction) {\n      applyAttraction(particle1, {\n        x: mousePosition.x,\n        y: mousePosition.y,\n        group: \"mouse\",\n        vx: 0,\n        vy: 0,\n      });\n    }\n  }\n}\n\nfunction drawBoundingBox() {\n  // ctx.strokeStyle = \"white\";\n  const heightMargin = (canvas.height / 2) * (globalParams.margin / 100);\n  const widthMargin = (canvas.width / 2) * (globalParams.margin / 100);\n\n  canvas.box(\n    widthMargin - globalParams.radius,\n    heightMargin - globalParams.radius,\n    canvas.width - widthMargin * 2 + globalParams.radius * 2,\n    canvas.height - heightMargin * 2 + globalParams.radius * 2,\n    \"white\"\n  );\n}\n\nfunction render() {\n  if (globalParams.isRunning) {\n    applyRules();\n  }\n  canvas.clear(globalParams.backgroundOpacity);\n  for (const particle of particles) {\n    if (particle.group !== \"mouse\" && particle.group !== \"gravity\") {\n      canvas.circle(\n        particle.x,\n        particle.y,\n        globalParams.radius,\n        colorTheme.groups[particle.group]\n      );\n    }\n  }\n  drawBoundingBox();\n  window.requestAnimationFrame(render);\n}\nrender();\n\nfunction randomColorChannelValue() {\n  return Math.round(Math.random() * 255);\n}\n\ncanvas.addEventListener(\"mousemove\", (event) => {\n  mousePosition.x = event.clientX;\n  mousePosition.y = event.clientY;\n});\n\ncanvas.addEventListener(\"mousedown\", (event) => {\n  globalParams.mouseInteraction = true;\n});\n\ncanvas.addEventListener(\"mouseup\", (event) => {\n  globalParams.mouseInteraction = false;\n});\n\nfunction randomizeRules() {\n  for (const rule of rules) {\n    rule.distance = Math.round(Math.random() * 1_000);\n    rule.attraction = Math.random() * 2 - 1;\n  }\n\n  updateDisplay(rulesFolder);\n}\n\ntype Controller = {\n  updateDisplay: () => void;\n};\ntype Folder = {\n  controllers: Controller[];\n  folders: Folder[];\n};\n\nfunction updateDisplay(folder: Folder) {\n  for (const controller of folder.controllers) {\n    controller.updateDisplay();\n  }\n  for (const subFolder of folder.folders) {\n    updateDisplay(subFolder);\n  }\n}\n","console.log(\"Hello from shared.ts\");\n\nexport class ParticleCanvas implements Partial<HTMLCanvasElement> {\n  canvas: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n\n  get width() {\n    return this.canvas.width;\n  }\n\n  get height() {\n    return this.canvas.height;\n  }\n\n  private resizeCanvas() {\n    this.canvas.width = window.innerWidth;\n    this.canvas.height = window.innerHeight;\n  }\n\n  constructor(id: string) {\n    this.canvas = document.getElementById(id)! as HTMLCanvasElement;\n    this.ctx = this.canvas.getContext(\"2d\")!;\n    this.resizeCanvas();\n    window.addEventListener(\"resize\", this.resizeCanvas);\n  }\n\n  clear(opacity: number = 1) {\n    this.ctx.fillStyle = `rgba(0, 0, 0, ${opacity})`;\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  box(x: number, y: number, width: number, height: number, color: string) {\n    this.ctx.fillStyle = color;\n    this.ctx.strokeRect(x, y, width, height);\n  }\n\n  circle(x: number, y: number, radius: number, color: string) {\n    this.ctx.fillStyle = color;\n    this.ctx.beginPath();\n    this.ctx.ellipse(\n      x - radius / 2,\n      y - radius / 2,\n      radius,\n      radius,\n      0,\n      0,\n      2 * Math.PI\n    );\n    this.ctx.fill();\n  }\n\n  addEventListener(\n    evenName: string,\n    listener: {\n      (event: any): void;\n      (event: any): void;\n      (event: any): void;\n      (this: HTMLCanvasElement, ev: any): any;\n    }\n  ) {\n    this.canvas.addEventListener(evenName, listener);\n  }\n}\n"],"names":["console","log","$f27a99974ce68c5f$var$globalParams","isRunning","radius","edgeDumping","friction","nucleusRepulsion","margin","mouseInteraction","backgroundOpacity","gravity","enabled","force","randomizeRules","$f27a99974ce68c5f$var$randomizeRules","rule","$f27a99974ce68c5f$var$rules","distance","Math","round","random","attraction","$f27a99974ce68c5f$var$updateDisplay","folder","controller","controllers","updateDisplay","subFolder","folders","$f27a99974ce68c5f$var$rulesFolder","$f27a99974ce68c5f$var$controlGui","lil","GUI","close","$f27a99974ce68c5f$var$globalSettingsFolder","addFolder","add","name","$f27a99974ce68c5f$var$canvas","canvas","ctx","width","height","resizeCanvas","window","innerWidth","innerHeight","constructor","id","document","getElementById","getContext","addEventListener","clear","opacity","fillStyle","fillRect","box","x","y","color","strokeRect","circle","beginPath","ellipse","PI","fill","evenName","listener","$f27a99974ce68c5f$var$GROUPS","$f27a99974ce68c5f$var$colorTheme","background","groups","who","to","push","Number","MAX_VALUE","group","groupRules","filter","r","groupFolder","addColor","ruleFolder","$f27a99974ce68c5f$var$mousePosition","$f27a99974ce68c5f$var$particles","flatMap","c","Array","from","length","map","vx","vy","$f27a99974ce68c5f$var$applyAttraction","p1","p2","find","fx","fy","dx","dy","$f27a99974ce68c5f$var$bounceDistance","sqrt","F","$f27a99974ce68c5f$var$bounceLimits","particle","heightMargin","widthMargin","$f27a99974ce68c5f$var$render","$f27a99974ce68c5f$var$applyRules","particle1","particle2","$f27a99974ce68c5f$var$drawBoundingBox","requestAnimationFrame","event","clientX","clientY"],"version":3,"file":"index.33d03dd0.js.map"}